{"version":3,"sources":["assets/hand-holding-raspberry-pie.png","assets/strawberry-cone-pie.png","Header.js","Nav.js","HomeContent.js","Footer.js","MenuItem.js","Menu.js","FindUs.js","Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","react_router_dom","to","aria-hidden","Nav","props","activeClassName","HomeContent","src","raspberryPie","alt","style","clear","height","Footer","MenuItem","conePieStrawberry","Menu","src_MenuItem","FindUs","Contact","App","state","page","src_Nav","react_router","path","exact","component","src_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2ECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8RCGzB,SAASC,IACtB,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KACTL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAII,cAAY,QAAhB,sBACAN,EAAAC,EAAAC,cAAA,MAAII,cAAY,QAAhB,wBCPR,IAgBeC,EAhBH,SAAAC,GACV,OACER,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,QAAQI,gBAAgB,SAASN,UAAU,YACrDH,EAAAC,EAAAC,cAAA,yBAEFF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAWI,gBAAgB,SAASN,UAAU,iBACxDH,EAAAC,EAAAC,cAAA,8BAEFF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAWI,gBAAgB,SAASN,UAAU,cACxDH,EAAAC,EAAAC,cAAA,8CCTO,SAASQ,IACtB,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEbH,EAAAC,EAAAC,cAAA,OACES,IAAKC,IACLC,IAAI,kCACJV,UAAU,kBAEZH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,2BADF,gGAKAH,EAAAC,EAAAC,cAAA,sMAKAF,EAAAC,EAAAC,cAAA,6LAKAF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,sCAMYF,EAAAC,EAAAC,cAAA,OAAKY,MAAO,CAACC,MAAO,OAAQC,OAAQ,WCjCxD,IAEeC,EAFA,kBAAOjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCCetBe,EAZE,WACb,OACIlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWQ,IAAKQ,IAAmBN,IAAI,KACtDb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,sDCNG,SAASkB,IACpB,OACIpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACmB,EAAD,OAEJrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACmB,EAAD,OAEJrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACmB,EAAD,cCfD,SAASC,IACpB,OACItB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,UACAH,EAAAC,EAAAC,cAAA,8BCPG,SAASqB,IACpB,OACIvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,mCCkCGsB,6MAzBbC,MAAQ,CACNC,KAAM,gFAIR,OACE1B,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAACyB,EAAD,MAEA3B,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWrB,IACjCV,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAOC,KAAK,QAAQC,OAAK,EAACC,UAAWX,IACrCpB,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAOC,KAAK,WAAWC,OAAK,EAACC,UAAWT,IACxCtB,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAOC,KAAK,WAAWC,OAAK,EAACC,UAAWR,KAG1CvB,EAAAC,EAAAC,cAAC8B,EAAD,eAnBUC,aCDEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxC,EAAAC,EAAAC,cAACuC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.14e7fddd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hand-holding-raspberry-pie.07379462.png\";","module.exports = __webpack_public_path__ + \"static/media/strawberry-cone-pie.63d6c8f9.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header>\r\n      <div className=\"cloudline\" />\r\n      <Link to=\"/\">\r\n      <div className=\"logo\">\r\n        <h1 aria-hidden=\"true\">Birdie's Cone Pies</h1>\r\n        <h2 aria-hidden=\"true\">Peckin' Delicious</h2>\r\n      </div>\r\n      </Link>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Nav = props => {\r\n  return (\r\n    <nav>\r\n      <NavLink to='/menu' activeClassName=\"active\" className=\"the-pies\">\r\n        <span>The Pies</span>\r\n      </NavLink>\r\n      <NavLink to=\"/find-us\" activeClassName=\"active\" className=\"track-us-down\">\r\n        <span>Track Us Down</span>\r\n      </NavLink>\r\n      <NavLink to='/contact' activeClassName=\"active\" className=\"contact-us\">\r\n        <span>Contact Us</span>\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\n\r\nimport raspberryPie from \"./assets/hand-holding-raspberry-pie.png\";\r\n\r\nexport default function HomeContent() {\r\n  return (\r\n    <div className=\"main-content\">\r\n      {/* <!-- <h1>Coming soon to Utah!</h1> --> */}\r\n      <img\r\n        src={raspberryPie}\r\n        alt=\"hand holding raspberry cone pie\"\r\n        className=\"left-side-pic\"\r\n      />\r\n      <p>\r\n        <span className=\"birdie-type\">Birdie’s Cone Pies</span> are “grandma’s”\r\n        delicious pie crusts in a cone shape ready to eat on the go.\r\n      </p>\r\n\r\n      <p>\r\n        Our pies can be filled with our signature cheesecake, sweet or tangy\r\n        cream and your choice of fruits, chocolate, caramel, peanut butter...\r\n        and so much more. Create your own combination.\r\n      </p>\r\n      <p>\r\n        Also look for our fresh fruit and savory pies on our “birds of the week”\r\n        menu. Homemade apple pies, peach cobbler, chicken pot pies... you get\r\n        the idea. Lots to love.\r\n      </p>\r\n      <p>\r\n        <strong>Coming Summer 2019!</strong>\r\n      </p>\r\n      {/* <!-- <div className=\"main-pic\">\r\n        <h2 aria-hidden=\"true\">\r\n          Hand holding a raspberry cone pie with whipped cream.\r\n        </h2>\r\n      </div> --> */}<div style={{clear: 'both', height: '4rem'}}></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst Footer = () => (<div className=\"footer\" />);\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport './menu.css';\r\nimport conePieStrawberry from './assets/strawberry-cone-pie.png';\r\n\r\nconst MenuItem = () => {\r\n    return (\r\n        <div className=\"menu-item\">\r\n            <img className=\"menu-img\" src={conePieStrawberry} alt=\"\"/>\r\n            <div className=\"menu-item-box\">\r\n            <h3>Raspberry Pie</h3>\r\n            <p>Made with fresh Bear Lake raspberries!</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuItem;","import React from 'react';\r\nimport MenuItem from './MenuItem';\r\n\r\nimport './menu.css';\r\n\r\nexport default function Menu() {\r\n    return (\r\n        <div className=\"page menu\">\r\n            <h1>Menu</h1>\r\n            <div className=\"menu-row\">\r\n                <MenuItem />\r\n                <MenuItem />\r\n            </div>\r\n            <div className=\"menu-row\">\r\n                <MenuItem />\r\n                <MenuItem />\r\n            </div>\r\n            <div className=\"menu-row\">\r\n                <MenuItem />\r\n                <MenuItem />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport './findUs.css';\r\n\r\nexport default function FindUs() {\r\n    return (\r\n        <div className=\"page find-us\">\r\n            <h2>Find Us</h2>\r\n            <div className=\"schedule\">findus</div>\r\n            <h3>Where we'll be:</h3>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Contact() {\r\n    return (\r\n        <div className=\"page contact\">\r\n            <h2>Contact Us</h2>\r\n        </div>\r\n    )\r\n}\r\n","import React, {Component} from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Header from \"./Header\";\nimport Nav from \"./Nav\";\nimport HomeContent from \"./HomeContent\";\nimport Footer from \"./Footer\";\nimport Menu from './Menu';\nimport FindUs from './FindUs';\nimport Contact from './Contact';\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    page: 'home'\n  }\n\n  render() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Nav />\n\n        <main>\n          <Route path=\"/\" exact component={HomeContent} />\n          <Route path=\"/menu\" exact component={Menu} />\n          <Route path=\"/find-us\" exact component={FindUs} />\n          <Route path=\"/contact\" exact component={Contact} />\n        </main>\n\n        <Footer />\n      </div>\n    </Router>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}